/*
 * HR API
 * <a href='swaggerv2.json'>Download Swagger Json in OAS2 Format.</a>
 *
 * The version of the OpenAPI document: 2
 * Contact: hrapi@iris.co.uk
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BankAddress;
import com.konfigthis.client.model.BankDetailsModel;
import com.konfigthis.client.model.BankDetailsQueryModel;
import com.konfigthis.client.model.CreateBankDetailsCommand;
import com.konfigthis.client.model.UpdateBankDetailsCommand;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BankDetailsApi
 */
@Disabled
public class BankDetailsApiTest {

    private static BankDetailsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BankDetailsApi(apiClient);
    }

    /**
     * Creates a Bank Details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBankDetailTest() throws ApiException {
        String employeeId = null;
        String bankName = null;
        BankAddress bankAddress = null;
        String accountName = null;
        String accountNumber = null;
        String sortCode = null;
        String rollNumber = null;
        String response = api.createBankDetail()
                .employeeId(employeeId)
                .bankName(bankName)
                .bankAddress(bankAddress)
                .accountName(accountName)
                .accountNumber(accountNumber)
                .sortCode(sortCode)
                .rollNumber(rollNumber)
                .execute();
        // TODO: test validations
    }

    /**
     * Gets a single Bank Details by an ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String id = null;
        BankDetailsModel response = api.getById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Gets a list of Bank Details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListTest() throws ApiException {
        Integer $top = null;
        Integer $skip = null;
        String $filter = null;
        List<String> $select = null;
        String $orderby = null;
        Boolean $count = null;
        BankDetailsQueryModel response = api.getList()
                .$top($top)
                .$skip($skip)
                .$filter($filter)
                .$select($select)
                .$orderby($orderby)
                .$count($count)
                .execute();
        // TODO: test validations
    }

    /**
     * Updates Bank Details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBankDetailTest() throws ApiException {
        String id = null;
        String bankName = null;
        BankAddress bankAddress = null;
        String accountName = null;
        String accountNumber = null;
        String sortCode = null;
        String rollNumber = null;
        String id = null;
        api.updateBankDetail(id)
                .bankName(bankName)
                .bankAddress(bankAddress)
                .accountName(accountName)
                .accountNumber(accountNumber)
                .sortCode(sortCode)
                .rollNumber(rollNumber)
                .id(id)
                .execute();
        // TODO: test validations
    }

}
