/*
 * HR API
 * <a href='swaggerv2.json'>Download Swagger Json in OAS2 Format.</a>
 *
 * The version of the OpenAPI document: 2
 * Contact: hrapi@iris.co.uk
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Address;
import com.konfigthis.client.model.CreateEmployeeCommand;
import com.konfigthis.client.model.Email;
import com.konfigthis.client.model.EmployeeModel;
import com.konfigthis.client.model.EmployeeQueryModel;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.Phone;
import com.konfigthis.client.model.UpdateEmployeeCommand;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmployeesApi
 */
@Disabled
public class EmployeesApiTest {

    private static EmployeesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new EmployeesApi(apiClient);
    }

    /**
     * Creates a new Employee.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewEmployeeTest() throws ApiException {
        String displayId = null;
        String titleHonorific = null;
        String firstName = null;
        String knownAs = null;
        String otherName = null;
        String lastName = null;
        String costCentre = null;
        String workingStatus = null;
        Boolean isManager = null;
        String nationalInsuranceNumber = null;
        String payrollId = null;
        String taxCode = null;
        Boolean includeInPayroll = null;
        OffsetDateTime employmentStartDate = null;
        OffsetDateTime employmentLeftDate = null;
        OffsetDateTime continuousServiceDate = null;
        OffsetDateTime dateOfBirth = null;
        OffsetDateTime lastWorkingDate = null;
        String gender = null;
        String ethnicity = null;
        String nationality = null;
        String religion = null;
        String leaverReason = null;
        String maritalStatus = null;
        List<Phone> phones = null;
        List<Email> emails = null;
        List<Address> addresses = null;
        String genderIdentity = null;
        String windowsUsername = null;
        String response = api.createNewEmployee()
                .displayId(displayId)
                .titleHonorific(titleHonorific)
                .firstName(firstName)
                .knownAs(knownAs)
                .otherName(otherName)
                .lastName(lastName)
                .costCentre(costCentre)
                .workingStatus(workingStatus)
                .isManager(isManager)
                .nationalInsuranceNumber(nationalInsuranceNumber)
                .payrollId(payrollId)
                .taxCode(taxCode)
                .includeInPayroll(includeInPayroll)
                .employmentStartDate(employmentStartDate)
                .employmentLeftDate(employmentLeftDate)
                .continuousServiceDate(continuousServiceDate)
                .dateOfBirth(dateOfBirth)
                .lastWorkingDate(lastWorkingDate)
                .gender(gender)
                .ethnicity(ethnicity)
                .nationality(nationality)
                .religion(religion)
                .leaverReason(leaverReason)
                .maritalStatus(maritalStatus)
                .phones(phones)
                .emails(emails)
                .addresses(addresses)
                .genderIdentity(genderIdentity)
                .windowsUsername(windowsUsername)
                .execute();
        // TODO: test validations
    }

    /**
     * Gets a single Employee referenced by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String id = null;
        EmployeeModel response = api.getById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Gets a list of Employees.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListTest() throws ApiException {
        Integer $top = null;
        Integer $skip = null;
        String $filter = null;
        List<String> $select = null;
        String $orderby = null;
        Boolean $count = null;
        EmployeeQueryModel response = api.getList()
                .$top($top)
                .$skip($skip)
                .$filter($filter)
                .$select($select)
                .$orderby($orderby)
                .$count($count)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an Employee referenced by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByIdTest() throws ApiException {
        String id = null;
        String displayId = null;
        String titleHonorific = null;
        String firstName = null;
        String knownAs = null;
        String otherName = null;
        String lastName = null;
        String costCentre = null;
        String workingStatus = null;
        Boolean isManager = null;
        String nationalInsuranceNumber = null;
        String payrollId = null;
        String taxCode = null;
        Boolean includeInPayroll = null;
        OffsetDateTime employmentStartDate = null;
        OffsetDateTime employmentLeftDate = null;
        OffsetDateTime continuousServiceDate = null;
        OffsetDateTime dateOfBirth = null;
        OffsetDateTime lastWorkingDate = null;
        String gender = null;
        String ethnicity = null;
        String nationality = null;
        String religion = null;
        String leaverReason = null;
        String maritalStatus = null;
        List<Phone> phones = null;
        List<Email> emails = null;
        List<Address> addresses = null;
        String genderIdentity = null;
        String windowsUsername = null;
        String id = null;
        api.updateById(id)
                .displayId(displayId)
                .titleHonorific(titleHonorific)
                .firstName(firstName)
                .knownAs(knownAs)
                .otherName(otherName)
                .lastName(lastName)
                .costCentre(costCentre)
                .workingStatus(workingStatus)
                .isManager(isManager)
                .nationalInsuranceNumber(nationalInsuranceNumber)
                .payrollId(payrollId)
                .taxCode(taxCode)
                .includeInPayroll(includeInPayroll)
                .employmentStartDate(employmentStartDate)
                .employmentLeftDate(employmentLeftDate)
                .continuousServiceDate(continuousServiceDate)
                .dateOfBirth(dateOfBirth)
                .lastWorkingDate(lastWorkingDate)
                .gender(gender)
                .ethnicity(ethnicity)
                .nationality(nationality)
                .religion(religion)
                .leaverReason(leaverReason)
                .maritalStatus(maritalStatus)
                .phones(phones)
                .emails(emails)
                .addresses(addresses)
                .genderIdentity(genderIdentity)
                .windowsUsername(windowsUsername)
                .id(id)
                .execute();
        // TODO: test validations
    }

}
