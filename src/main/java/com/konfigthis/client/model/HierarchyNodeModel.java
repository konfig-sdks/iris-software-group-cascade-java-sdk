/*
 * HR API
 * <a href='swaggerv2.json'>Download Swagger Json in OAS2 Format.</a>
 *
 * The version of the OpenAPI document: 2
 * Contact: hrapi@iris.co.uk
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * The Hierarchy node.
 */
@ApiModel(description = "The Hierarchy node.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class HierarchyNodeModel {
  public static final String SERIALIZED_NAME_PARENT_ID = "ParentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_LEVEL = "Level";
  @SerializedName(SERIALIZED_NAME_LEVEL)
  private Integer level;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DISABLED = "Disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_SOURCE_SYSTEM_ID = "SourceSystemId";
  @SerializedName(SERIALIZED_NAME_SOURCE_SYSTEM_ID)
  private String sourceSystemId;

  public static final String SERIALIZED_NAME_SOURCE_SYSTEM_CREATED_ON = "SourceSystemCreatedOn";
  @SerializedName(SERIALIZED_NAME_SOURCE_SYSTEM_CREATED_ON)
  private OffsetDateTime sourceSystemCreatedOn;

  public static final String SERIALIZED_NAME_SOURCE_SYSTEM_LAST_MODIFIED_ON = "SourceSystemLastModifiedOn";
  @SerializedName(SERIALIZED_NAME_SOURCE_SYSTEM_LAST_MODIFIED_ON)
  private OffsetDateTime sourceSystemLastModifiedOn;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CREATED_ON = "CreatedOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  private OffsetDateTime createdOn;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_ON = "LastModifiedOn";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_ON)
  private OffsetDateTime lastModifiedOn;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private String lastModifiedBy;

  public HierarchyNodeModel() {
  }

  
  public HierarchyNodeModel(
     String sourceSystemId, 
     OffsetDateTime sourceSystemCreatedOn, 
     OffsetDateTime sourceSystemLastModifiedOn
  ) {
    this();
    this.sourceSystemId = sourceSystemId;
    this.sourceSystemCreatedOn = sourceSystemCreatedOn;
    this.sourceSystemLastModifiedOn = sourceSystemLastModifiedOn;
  }

  public HierarchyNodeModel parentId(String parentId) {
    
    
    
    
    this.parentId = parentId;
    return this;
  }

   /**
   * The Parent ID of this Hierarchy node. &lt;br /&gt;  Must exist in the Hierarchy Service.
   * @return parentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Parent ID of this Hierarchy node. <br />  Must exist in the Hierarchy Service.")

  public String getParentId() {
    return parentId;
  }


  public void setParentId(String parentId) {
    
    
    
    this.parentId = parentId;
  }


  public HierarchyNodeModel level(Integer level) {
    
    
    
    
    this.level = level;
    return this;
  }

   /**
   * The Level of the Hierarchy node. &lt;br /&gt;  Cascade Source: [ValidHierarchyX].[level]
   * @return level
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Level of the Hierarchy node. <br />  Cascade Source: [ValidHierarchyX].[level]")

  public Integer getLevel() {
    return level;
  }


  public void setLevel(Integer level) {
    
    
    
    this.level = level;
  }


  public HierarchyNodeModel title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * The Title of this Hierarchy node. &lt;br /&gt;  Cascade Source: [ValidHierarchyX].[name]
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Title of this Hierarchy node. <br />  Cascade Source: [ValidHierarchyX].[name]")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public HierarchyNodeModel disabled(Boolean disabled) {
    
    
    
    
    this.disabled = disabled;
    return this;
  }

   /**
   * Hierarchy node is disabled. &lt;br /&gt;  Cascade Source: [ValidHierarchyX].[disabled]
   * @return disabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Hierarchy node is disabled. <br />  Cascade Source: [ValidHierarchyX].[disabled]")

  public Boolean getDisabled() {
    return disabled;
  }


  public void setDisabled(Boolean disabled) {
    
    
    
    this.disabled = disabled;
  }


   /**
   * Source HR System Id. &lt;br /&gt;  Cascade Source: [ValidHierarchyX].[HierarchyNode] &lt;br /&gt;  Read Only
   * @return sourceSystemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source HR System Id. <br />  Cascade Source: [ValidHierarchyX].[HierarchyNode] <br />  Read Only")

  public String getSourceSystemId() {
    return sourceSystemId;
  }




   /**
   * The date when the Hierarchy node record was created in the Source HR System. &lt;br /&gt;  Cascade Source: [ValidHierarchyX].[createdon]
   * @return sourceSystemCreatedOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the Hierarchy node record was created in the Source HR System. <br />  Cascade Source: [ValidHierarchyX].[createdon]")

  public OffsetDateTime getSourceSystemCreatedOn() {
    return sourceSystemCreatedOn;
  }




   /**
   * The date when the Hierarchy node record was created or last updated in the Source HR System. &lt;br /&gt;  Cascade Source: [ValidHierarchyX].[disabledon] if exists else [ValidHierachyX].[createdon]
   * @return sourceSystemLastModifiedOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the Hierarchy node record was created or last updated in the Source HR System. <br />  Cascade Source: [ValidHierarchyX].[disabledon] if exists else [ValidHierachyX].[createdon]")

  public OffsetDateTime getSourceSystemLastModifiedOn() {
    return sourceSystemLastModifiedOn;
  }




  public HierarchyNodeModel id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * This ID of the Hierarchy node. &lt;br /&gt;  This field is generated by Iris HR platform and not related to the Cascade ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This ID of the Hierarchy node. <br />  This field is generated by Iris HR platform and not related to the Cascade ID.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public HierarchyNodeModel createdOn(OffsetDateTime createdOn) {
    
    
    
    
    this.createdOn = createdOn;
    return this;
  }

   /**
   * The date time when the Hierarchy node was created in the Iris HR platform.
   * @return createdOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date time when the Hierarchy node was created in the Iris HR platform.")

  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }


  public void setCreatedOn(OffsetDateTime createdOn) {
    
    
    
    this.createdOn = createdOn;
  }


  public HierarchyNodeModel createdBy(String createdBy) {
    
    
    
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Not used as the Iris HR platform has no concept of users at the moment.
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used as the Iris HR platform has no concept of users at the moment.")

  public String getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(String createdBy) {
    
    
    
    this.createdBy = createdBy;
  }


  public HierarchyNodeModel lastModifiedOn(OffsetDateTime lastModifiedOn) {
    
    
    
    
    this.lastModifiedOn = lastModifiedOn;
    return this;
  }

   /**
   * The date time when the Hierarchy node was created or last updated.
   * @return lastModifiedOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date time when the Hierarchy node was created or last updated.")

  public OffsetDateTime getLastModifiedOn() {
    return lastModifiedOn;
  }


  public void setLastModifiedOn(OffsetDateTime lastModifiedOn) {
    
    
    
    this.lastModifiedOn = lastModifiedOn;
  }


  public HierarchyNodeModel lastModifiedBy(String lastModifiedBy) {
    
    
    
    
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

   /**
   * Not used as the Iris HR platform has no concept of users at the moment.
   * @return lastModifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used as the Iris HR platform has no concept of users at the moment.")

  public String getLastModifiedBy() {
    return lastModifiedBy;
  }


  public void setLastModifiedBy(String lastModifiedBy) {
    
    
    
    this.lastModifiedBy = lastModifiedBy;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the HierarchyNodeModel instance itself
   */
  public HierarchyNodeModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HierarchyNodeModel hierarchyNodeModel = (HierarchyNodeModel) o;
    return Objects.equals(this.parentId, hierarchyNodeModel.parentId) &&
        Objects.equals(this.level, hierarchyNodeModel.level) &&
        Objects.equals(this.title, hierarchyNodeModel.title) &&
        Objects.equals(this.disabled, hierarchyNodeModel.disabled) &&
        Objects.equals(this.sourceSystemId, hierarchyNodeModel.sourceSystemId) &&
        Objects.equals(this.sourceSystemCreatedOn, hierarchyNodeModel.sourceSystemCreatedOn) &&
        Objects.equals(this.sourceSystemLastModifiedOn, hierarchyNodeModel.sourceSystemLastModifiedOn) &&
        Objects.equals(this.id, hierarchyNodeModel.id) &&
        Objects.equals(this.createdOn, hierarchyNodeModel.createdOn) &&
        Objects.equals(this.createdBy, hierarchyNodeModel.createdBy) &&
        Objects.equals(this.lastModifiedOn, hierarchyNodeModel.lastModifiedOn) &&
        Objects.equals(this.lastModifiedBy, hierarchyNodeModel.lastModifiedBy)&&
        Objects.equals(this.additionalProperties, hierarchyNodeModel.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(parentId, level, title, disabled, sourceSystemId, sourceSystemCreatedOn, sourceSystemLastModifiedOn, id, createdOn, createdBy, lastModifiedOn, lastModifiedBy, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HierarchyNodeModel {\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    sourceSystemId: ").append(toIndentedString(sourceSystemId)).append("\n");
    sb.append("    sourceSystemCreatedOn: ").append(toIndentedString(sourceSystemCreatedOn)).append("\n");
    sb.append("    sourceSystemLastModifiedOn: ").append(toIndentedString(sourceSystemLastModifiedOn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastModifiedOn: ").append(toIndentedString(lastModifiedOn)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ParentId");
    openapiFields.add("Level");
    openapiFields.add("Title");
    openapiFields.add("Disabled");
    openapiFields.add("SourceSystemId");
    openapiFields.add("SourceSystemCreatedOn");
    openapiFields.add("SourceSystemLastModifiedOn");
    openapiFields.add("Id");
    openapiFields.add("CreatedOn");
    openapiFields.add("CreatedBy");
    openapiFields.add("LastModifiedOn");
    openapiFields.add("LastModifiedBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to HierarchyNodeModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!HierarchyNodeModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HierarchyNodeModel is not found in the empty JSON string", HierarchyNodeModel.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("ParentId").isJsonNull() && (jsonObj.get("ParentId") != null && !jsonObj.get("ParentId").isJsonNull()) && !jsonObj.get("ParentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentId").toString()));
      }
      if (!jsonObj.get("Title").isJsonNull() && (jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) && !jsonObj.get("Title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Title").toString()));
      }
      if (!jsonObj.get("SourceSystemId").isJsonNull() && (jsonObj.get("SourceSystemId") != null && !jsonObj.get("SourceSystemId").isJsonNull()) && !jsonObj.get("SourceSystemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SourceSystemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SourceSystemId").toString()));
      }
      if (!jsonObj.get("Id").isJsonNull() && (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      if (!jsonObj.get("CreatedBy").isJsonNull() && (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) && !jsonObj.get("CreatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CreatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CreatedBy").toString()));
      }
      if (!jsonObj.get("LastModifiedBy").isJsonNull() && (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) && !jsonObj.get("LastModifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastModifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastModifiedBy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HierarchyNodeModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HierarchyNodeModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HierarchyNodeModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HierarchyNodeModel.class));

       return (TypeAdapter<T>) new TypeAdapter<HierarchyNodeModel>() {
           @Override
           public void write(JsonWriter out, HierarchyNodeModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public HierarchyNodeModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             HierarchyNodeModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of HierarchyNodeModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of HierarchyNodeModel
  * @throws IOException if the JSON string is invalid with respect to HierarchyNodeModel
  */
  public static HierarchyNodeModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HierarchyNodeModel.class);
  }

 /**
  * Convert an instance of HierarchyNodeModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

