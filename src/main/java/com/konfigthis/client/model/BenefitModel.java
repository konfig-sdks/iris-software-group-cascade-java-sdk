/*
 * HR API
 * <a href='swaggerv2.json'>Download Swagger Json in OAS2 Format.</a>
 *
 * The version of the OpenAPI document: 2
 * Contact: hrapi@iris.co.uk
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * An HR Employee&#39;s Benefits.
 */
@ApiModel(description = "An HR Employee's Benefits.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class BenefitModel {
  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "EmployeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_VALUE = "Value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Double value;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "EndDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_P11_D_VALUE = "P11DValue";
  @SerializedName(SERIALIZED_NAME_P11_D_VALUE)
  private Double p11DValue;

  public static final String SERIALIZED_NAME_SUSPENDED = "Suspended";
  @SerializedName(SERIALIZED_NAME_SUSPENDED)
  private Boolean suspended;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SOURCE_SYSTEM_ID = "SourceSystemId";
  @SerializedName(SERIALIZED_NAME_SOURCE_SYSTEM_ID)
  private String sourceSystemId;

  public static final String SERIALIZED_NAME_CREATED_ON = "CreatedOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  private OffsetDateTime createdOn;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_ON = "LastModifiedOn";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_ON)
  private OffsetDateTime lastModifiedOn;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private String lastModifiedBy;

  public BenefitModel() {
  }

  public BenefitModel employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * The EmployeeId. &lt;br /&gt;  Cascade Source: [EmployeeBenefits].[EmployeeId]
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The EmployeeId. <br />  Cascade Source: [EmployeeBenefits].[EmployeeId]")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public BenefitModel type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * The Type. &lt;br /&gt;  Cascade Source: [EmployeeBenefits].[Code]
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Type. <br />  Cascade Source: [EmployeeBenefits].[Code]")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public BenefitModel description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * The Description. &lt;br /&gt;  Cascade Source: [EmployeeBenefits].[Notes]
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Description. <br />  Cascade Source: [EmployeeBenefits].[Notes]")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public BenefitModel value(Double value) {
    
    
    
    
    this.value = value;
    return this;
  }

   /**
   * The Value. &lt;br /&gt;  Cascade Source: [EmployeeBenefits].[Value]
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Value. <br />  Cascade Source: [EmployeeBenefits].[Value]")

  public Double getValue() {
    return value;
  }


  public void setValue(Double value) {
    
    
    
    this.value = value;
  }


  public BenefitModel startDate(OffsetDateTime startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The Start Date. &lt;br /&gt;  Cascade Source: [EmployeeBenefits].[StartDate]
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Start Date. <br />  Cascade Source: [EmployeeBenefits].[StartDate]")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    
    
    
    this.startDate = startDate;
  }


  public BenefitModel endDate(OffsetDateTime endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The End Date. &lt;br /&gt;  Cascade Source: [EmployeeBenefits].[EndDate]
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The End Date. <br />  Cascade Source: [EmployeeBenefits].[EndDate]")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    
    
    
    this.endDate = endDate;
  }


  public BenefitModel p11DValue(Double p11DValue) {
    
    
    
    
    this.p11DValue = p11DValue;
    return this;
  }

   /**
   * The P11DValue. &lt;br /&gt;  Cascade Source: [EmployeeBenefits].[P11DValueCurrency]
   * @return p11DValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The P11DValue. <br />  Cascade Source: [EmployeeBenefits].[P11DValueCurrency]")

  public Double getP11DValue() {
    return p11DValue;
  }


  public void setP11DValue(Double p11DValue) {
    
    
    
    this.p11DValue = p11DValue;
  }


  public BenefitModel suspended(Boolean suspended) {
    
    
    
    
    this.suspended = suspended;
    return this;
  }

   /**
   * The Suspended value. &lt;br /&gt;  Cascade Source: [EmployeeBenefits].[Suspended]
   * @return suspended
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Suspended value. <br />  Cascade Source: [EmployeeBenefits].[Suspended]")

  public Boolean getSuspended() {
    return suspended;
  }


  public void setSuspended(Boolean suspended) {
    
    
    
    this.suspended = suspended;
  }


  public BenefitModel id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the Benefit. &lt;br /&gt;  This field is generated by Iris HR platform and not related to the Cascade ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Benefit. <br />  This field is generated by Iris HR platform and not related to the Cascade ID.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public BenefitModel sourceSystemId(String sourceSystemId) {
    
    
    
    
    this.sourceSystemId = sourceSystemId;
    return this;
  }

   /**
   * Source HR System Id. &lt;br /&gt;  Cascade Source: [EmployeeBenefits].[Ruid] &lt;br /&gt;  Read Only
   * @return sourceSystemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source HR System Id. <br />  Cascade Source: [EmployeeBenefits].[Ruid] <br />  Read Only")

  public String getSourceSystemId() {
    return sourceSystemId;
  }


  public void setSourceSystemId(String sourceSystemId) {
    
    
    
    this.sourceSystemId = sourceSystemId;
  }


  public BenefitModel createdOn(OffsetDateTime createdOn) {
    
    
    
    
    this.createdOn = createdOn;
    return this;
  }

   /**
   * The date time when the Benefit was created in the Iris HR platform.
   * @return createdOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date time when the Benefit was created in the Iris HR platform.")

  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }


  public void setCreatedOn(OffsetDateTime createdOn) {
    
    
    
    this.createdOn = createdOn;
  }


  public BenefitModel createdBy(String createdBy) {
    
    
    
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Not used as the Iris HR platform has no concept of users at the moment.
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used as the Iris HR platform has no concept of users at the moment.")

  public String getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(String createdBy) {
    
    
    
    this.createdBy = createdBy;
  }


  public BenefitModel lastModifiedOn(OffsetDateTime lastModifiedOn) {
    
    
    
    
    this.lastModifiedOn = lastModifiedOn;
    return this;
  }

   /**
   * Not used as the Iris HR platform has no concept of users at the moment.
   * @return lastModifiedOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used as the Iris HR platform has no concept of users at the moment.")

  public OffsetDateTime getLastModifiedOn() {
    return lastModifiedOn;
  }


  public void setLastModifiedOn(OffsetDateTime lastModifiedOn) {
    
    
    
    this.lastModifiedOn = lastModifiedOn;
  }


  public BenefitModel lastModifiedBy(String lastModifiedBy) {
    
    
    
    
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

   /**
   * Not used as the Iris HR platform has no concept of users at the moment.
   * @return lastModifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used as the Iris HR platform has no concept of users at the moment.")

  public String getLastModifiedBy() {
    return lastModifiedBy;
  }


  public void setLastModifiedBy(String lastModifiedBy) {
    
    
    
    this.lastModifiedBy = lastModifiedBy;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the BenefitModel instance itself
   */
  public BenefitModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BenefitModel benefitModel = (BenefitModel) o;
    return Objects.equals(this.employeeId, benefitModel.employeeId) &&
        Objects.equals(this.type, benefitModel.type) &&
        Objects.equals(this.description, benefitModel.description) &&
        Objects.equals(this.value, benefitModel.value) &&
        Objects.equals(this.startDate, benefitModel.startDate) &&
        Objects.equals(this.endDate, benefitModel.endDate) &&
        Objects.equals(this.p11DValue, benefitModel.p11DValue) &&
        Objects.equals(this.suspended, benefitModel.suspended) &&
        Objects.equals(this.id, benefitModel.id) &&
        Objects.equals(this.sourceSystemId, benefitModel.sourceSystemId) &&
        Objects.equals(this.createdOn, benefitModel.createdOn) &&
        Objects.equals(this.createdBy, benefitModel.createdBy) &&
        Objects.equals(this.lastModifiedOn, benefitModel.lastModifiedOn) &&
        Objects.equals(this.lastModifiedBy, benefitModel.lastModifiedBy)&&
        Objects.equals(this.additionalProperties, benefitModel.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(employeeId, type, description, value, startDate, endDate, p11DValue, suspended, id, sourceSystemId, createdOn, createdBy, lastModifiedOn, lastModifiedBy, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BenefitModel {\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    p11DValue: ").append(toIndentedString(p11DValue)).append("\n");
    sb.append("    suspended: ").append(toIndentedString(suspended)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sourceSystemId: ").append(toIndentedString(sourceSystemId)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastModifiedOn: ").append(toIndentedString(lastModifiedOn)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EmployeeId");
    openapiFields.add("Type");
    openapiFields.add("Description");
    openapiFields.add("Value");
    openapiFields.add("StartDate");
    openapiFields.add("EndDate");
    openapiFields.add("P11DValue");
    openapiFields.add("Suspended");
    openapiFields.add("Id");
    openapiFields.add("SourceSystemId");
    openapiFields.add("CreatedOn");
    openapiFields.add("CreatedBy");
    openapiFields.add("LastModifiedOn");
    openapiFields.add("LastModifiedBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to BenefitModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!BenefitModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BenefitModel is not found in the empty JSON string", BenefitModel.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("EmployeeId").isJsonNull() && (jsonObj.get("EmployeeId") != null && !jsonObj.get("EmployeeId").isJsonNull()) && !jsonObj.get("EmployeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EmployeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EmployeeId").toString()));
      }
      if (!jsonObj.get("Type").isJsonNull() && (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) && !jsonObj.get("Type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Type").toString()));
      }
      if (!jsonObj.get("Description").isJsonNull() && (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if (!jsonObj.get("Id").isJsonNull() && (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      if (!jsonObj.get("SourceSystemId").isJsonNull() && (jsonObj.get("SourceSystemId") != null && !jsonObj.get("SourceSystemId").isJsonNull()) && !jsonObj.get("SourceSystemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SourceSystemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SourceSystemId").toString()));
      }
      if (!jsonObj.get("CreatedBy").isJsonNull() && (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) && !jsonObj.get("CreatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CreatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CreatedBy").toString()));
      }
      if (!jsonObj.get("LastModifiedBy").isJsonNull() && (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) && !jsonObj.get("LastModifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastModifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastModifiedBy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BenefitModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BenefitModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BenefitModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BenefitModel.class));

       return (TypeAdapter<T>) new TypeAdapter<BenefitModel>() {
           @Override
           public void write(JsonWriter out, BenefitModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public BenefitModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             BenefitModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BenefitModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BenefitModel
  * @throws IOException if the JSON string is invalid with respect to BenefitModel
  */
  public static BenefitModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BenefitModel.class);
  }

 /**
  * Convert an instance of BenefitModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

