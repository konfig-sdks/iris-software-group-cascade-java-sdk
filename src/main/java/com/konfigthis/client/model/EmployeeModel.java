/*
 * HR API
 * <a href='swaggerv2.json'>Download Swagger Json in OAS2 Format.</a>
 *
 * The version of the OpenAPI document: 2
 * Contact: hrapi@iris.co.uk
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Address;
import com.konfigthis.client.model.Email;
import com.konfigthis.client.model.Phone;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * An HR Employee.
 */
@ApiModel(description = "An HR Employee.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeeModel {
  public static final String SERIALIZED_NAME_DISPLAY_ID = "DisplayId";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ID)
  private String displayId;

  public static final String SERIALIZED_NAME_TITLE_HONORIFIC = "TitleHonorific";
  @SerializedName(SERIALIZED_NAME_TITLE_HONORIFIC)
  private String titleHonorific;

  public static final String SERIALIZED_NAME_FIRST_NAME = "FirstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_KNOWN_AS = "KnownAs";
  @SerializedName(SERIALIZED_NAME_KNOWN_AS)
  private String knownAs;

  public static final String SERIALIZED_NAME_OTHER_NAME = "OtherName";
  @SerializedName(SERIALIZED_NAME_OTHER_NAME)
  private String otherName;

  public static final String SERIALIZED_NAME_LAST_NAME = "LastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_COST_CENTRE = "CostCentre";
  @SerializedName(SERIALIZED_NAME_COST_CENTRE)
  private String costCentre;

  public static final String SERIALIZED_NAME_WORKING_STATUS = "WorkingStatus";
  @SerializedName(SERIALIZED_NAME_WORKING_STATUS)
  private String workingStatus;

  public static final String SERIALIZED_NAME_IS_MANAGER = "IsManager";
  @SerializedName(SERIALIZED_NAME_IS_MANAGER)
  private Boolean isManager;

  public static final String SERIALIZED_NAME_NATIONAL_INSURANCE_NUMBER = "NationalInsuranceNumber";
  @SerializedName(SERIALIZED_NAME_NATIONAL_INSURANCE_NUMBER)
  private String nationalInsuranceNumber;

  public static final String SERIALIZED_NAME_PAYROLL_ID = "PayrollId";
  @SerializedName(SERIALIZED_NAME_PAYROLL_ID)
  private String payrollId;

  public static final String SERIALIZED_NAME_TAX_CODE = "TaxCode";
  @SerializedName(SERIALIZED_NAME_TAX_CODE)
  private String taxCode;

  public static final String SERIALIZED_NAME_INCLUDE_IN_PAYROLL = "IncludeInPayroll";
  @SerializedName(SERIALIZED_NAME_INCLUDE_IN_PAYROLL)
  private Boolean includeInPayroll;

  public static final String SERIALIZED_NAME_EMPLOYMENT_START_DATE = "EmploymentStartDate";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_START_DATE)
  private OffsetDateTime employmentStartDate;

  public static final String SERIALIZED_NAME_EMPLOYMENT_LEFT_DATE = "EmploymentLeftDate";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_LEFT_DATE)
  private OffsetDateTime employmentLeftDate;

  public static final String SERIALIZED_NAME_CONTINUOUS_SERVICE_DATE = "ContinuousServiceDate";
  @SerializedName(SERIALIZED_NAME_CONTINUOUS_SERVICE_DATE)
  private OffsetDateTime continuousServiceDate;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "DateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private OffsetDateTime dateOfBirth;

  public static final String SERIALIZED_NAME_LAST_WORKING_DATE = "LastWorkingDate";
  @SerializedName(SERIALIZED_NAME_LAST_WORKING_DATE)
  private OffsetDateTime lastWorkingDate;

  public static final String SERIALIZED_NAME_GENDER = "Gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_ETHNICITY = "Ethnicity";
  @SerializedName(SERIALIZED_NAME_ETHNICITY)
  private String ethnicity;

  public static final String SERIALIZED_NAME_NATIONALITY = "Nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  private String nationality;

  public static final String SERIALIZED_NAME_RELIGION = "Religion";
  @SerializedName(SERIALIZED_NAME_RELIGION)
  private String religion;

  public static final String SERIALIZED_NAME_LEAVER_REASON = "LeaverReason";
  @SerializedName(SERIALIZED_NAME_LEAVER_REASON)
  private String leaverReason;

  public static final String SERIALIZED_NAME_MARITAL_STATUS = "MaritalStatus";
  @SerializedName(SERIALIZED_NAME_MARITAL_STATUS)
  private String maritalStatus;

  public static final String SERIALIZED_NAME_PHONES = "Phones";
  @SerializedName(SERIALIZED_NAME_PHONES)
  private List<Phone> phones = null;

  public static final String SERIALIZED_NAME_EMAILS = "Emails";
  @SerializedName(SERIALIZED_NAME_EMAILS)
  private List<Email> emails = null;

  public static final String SERIALIZED_NAME_ADDRESSES = "Addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<Address> addresses = null;

  public static final String SERIALIZED_NAME_GENDER_IDENTITY = "GenderIdentity";
  @SerializedName(SERIALIZED_NAME_GENDER_IDENTITY)
  private String genderIdentity;

  public static final String SERIALIZED_NAME_WINDOWS_USERNAME = "WindowsUsername";
  @SerializedName(SERIALIZED_NAME_WINDOWS_USERNAME)
  private String windowsUsername;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SOURCE_SYSTEM_ID = "SourceSystemId";
  @SerializedName(SERIALIZED_NAME_SOURCE_SYSTEM_ID)
  private String sourceSystemId;

  public static final String SERIALIZED_NAME_CREATED_ON = "CreatedOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  private OffsetDateTime createdOn;

  public static final String SERIALIZED_NAME_SOURCE_SYSTEM_CREATED_ON = "SourceSystemCreatedOn";
  @SerializedName(SERIALIZED_NAME_SOURCE_SYSTEM_CREATED_ON)
  private OffsetDateTime sourceSystemCreatedOn;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_ON = "LastModifiedOn";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_ON)
  private OffsetDateTime lastModifiedOn;

  public static final String SERIALIZED_NAME_SOURCE_SYSTEM_LAST_MODIFIED_ON = "SourceSystemLastModifiedOn";
  @SerializedName(SERIALIZED_NAME_SOURCE_SYSTEM_LAST_MODIFIED_ON)
  private OffsetDateTime sourceSystemLastModifiedOn;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private String lastModifiedBy;

  public EmployeeModel() {
  }

  public EmployeeModel displayId(String displayId) {
    
    
    
    
    this.displayId = displayId;
    return this;
  }

   /**
   * The Display ID of the Employee. &lt;br /&gt;  If provided must be unqiue, If null then it will automatically be generated. &lt;br /&gt;  Cascade Source: [Employee].[DisplayEmployeeId]
   * @return displayId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Display ID of the Employee. <br />  If provided must be unqiue, If null then it will automatically be generated. <br />  Cascade Source: [Employee].[DisplayEmployeeId]")

  public String getDisplayId() {
    return displayId;
  }


  public void setDisplayId(String displayId) {
    
    
    
    this.displayId = displayId;
  }


  public EmployeeModel titleHonorific(String titleHonorific) {
    
    
    
    
    this.titleHonorific = titleHonorific;
    return this;
  }

   /**
   * The Title of the Employee. E.g. Mr, Mrs, Miss. &lt;br /&gt;  Cascade Source: [Employee].[Title] translated through the TITLE system list.
   * @return titleHonorific
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Title of the Employee. E.g. Mr, Mrs, Miss. <br />  Cascade Source: [Employee].[Title] translated through the TITLE system list.")

  public String getTitleHonorific() {
    return titleHonorific;
  }


  public void setTitleHonorific(String titleHonorific) {
    
    
    
    this.titleHonorific = titleHonorific;
  }


  public EmployeeModel firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The First Name of the Employee. &lt;br /&gt;  Required. &lt;br /&gt;  Cascade Source: [Employee].[Forename]
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The First Name of the Employee. <br />  Required. <br />  Cascade Source: [Employee].[Forename]")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public EmployeeModel knownAs(String knownAs) {
    
    
    
    
    this.knownAs = knownAs;
    return this;
  }

   /**
   * The name the Employee is commonly known as. &lt;br /&gt;  Cascade Source: [Employee].[KnownAs]
   * @return knownAs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name the Employee is commonly known as. <br />  Cascade Source: [Employee].[KnownAs]")

  public String getKnownAs() {
    return knownAs;
  }


  public void setKnownAs(String knownAs) {
    
    
    
    this.knownAs = knownAs;
  }


  public EmployeeModel otherName(String otherName) {
    
    
    
    
    this.otherName = otherName;
    return this;
  }

   /**
   * Any other name that the Employee has. &lt;br /&gt;  Cascade Source: [Employee].[OtherName]
   * @return otherName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any other name that the Employee has. <br />  Cascade Source: [Employee].[OtherName]")

  public String getOtherName() {
    return otherName;
  }


  public void setOtherName(String otherName) {
    
    
    
    this.otherName = otherName;
  }


  public EmployeeModel lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The Last Name, Surname or Family Name of the Employee. &lt;br /&gt;  Required. &lt;br /&gt;  Cascade Source: [Employee].[Surname]
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Last Name, Surname or Family Name of the Employee. <br />  Required. <br />  Cascade Source: [Employee].[Surname]")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public EmployeeModel costCentre(String costCentre) {
    
    
    
    
    this.costCentre = costCentre;
    return this;
  }

   /**
   * The Cost Centre assigned to the Employee. &lt;br /&gt;  Cascade Source: [Employee].[CostCentre]
   * @return costCentre
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Cost Centre assigned to the Employee. <br />  Cascade Source: [Employee].[CostCentre]")

  public String getCostCentre() {
    return costCentre;
  }


  public void setCostCentre(String costCentre) {
    
    
    
    this.costCentre = costCentre;
  }


  public EmployeeModel workingStatus(String workingStatus) {
    
    
    
    
    this.workingStatus = workingStatus;
    return this;
  }

   /**
   * The Status of the Employee E.g. On Holiday, Sick. &lt;br /&gt;  Automatically Calculated. &lt;br /&gt;  Cascade Source: [Sysview_Employee_Status].[StatusDescription]
   * @return workingStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Status of the Employee E.g. On Holiday, Sick. <br />  Automatically Calculated. <br />  Cascade Source: [Sysview_Employee_Status].[StatusDescription]")

  public String getWorkingStatus() {
    return workingStatus;
  }


  public void setWorkingStatus(String workingStatus) {
    
    
    
    this.workingStatus = workingStatus;
  }


  public EmployeeModel isManager(Boolean isManager) {
    
    
    
    
    this.isManager = isManager;
    return this;
  }

   /**
   * Indicates if the Employee is a Manager. &lt;br /&gt;  True if any other Employee&#39;s active &lt;see cref&#x3D;\&quot;T:Iris.Api.Hr.Employee.Domain.Entities.V1.Job\&quot;&gt;Job&lt;/see&gt; has this Employee as their Line Manager. &lt;br /&gt;  Automaticaly Calculated.
   * @return isManager
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if the Employee is a Manager. <br />  True if any other Employee's active <see cref=\"T:Iris.Api.Hr.Employee.Domain.Entities.V1.Job\">Job</see> has this Employee as their Line Manager. <br />  Automaticaly Calculated.")

  public Boolean getIsManager() {
    return isManager;
  }


  public void setIsManager(Boolean isManager) {
    
    
    
    this.isManager = isManager;
  }


  public EmployeeModel nationalInsuranceNumber(String nationalInsuranceNumber) {
    
    
    
    
    this.nationalInsuranceNumber = nationalInsuranceNumber;
    return this;
  }

   /**
   * The National Insurance Number of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[NationalInsuranceNo]
   * @return nationalInsuranceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The National Insurance Number of the Employee. <br />  Cascade Source: [Employee].[NationalInsuranceNo]")

  public String getNationalInsuranceNumber() {
    return nationalInsuranceNumber;
  }


  public void setNationalInsuranceNumber(String nationalInsuranceNumber) {
    
    
    
    this.nationalInsuranceNumber = nationalInsuranceNumber;
  }


  public EmployeeModel payrollId(String payrollId) {
    
    
    
    
    this.payrollId = payrollId;
    return this;
  }

   /**
   * The Payroll ID of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[PayrollId]
   * @return payrollId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Payroll ID of the Employee. <br />  Cascade Source: [Employee].[PayrollId]")

  public String getPayrollId() {
    return payrollId;
  }


  public void setPayrollId(String payrollId) {
    
    
    
    this.payrollId = payrollId;
  }


  public EmployeeModel taxCode(String taxCode) {
    
    
    
    
    this.taxCode = taxCode;
    return this;
  }

   /**
   * The Tax Code of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[TaxCode]
   * @return taxCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Tax Code of the Employee. <br />  Cascade Source: [Employee].[TaxCode]")

  public String getTaxCode() {
    return taxCode;
  }


  public void setTaxCode(String taxCode) {
    
    
    
    this.taxCode = taxCode;
  }


  public EmployeeModel includeInPayroll(Boolean includeInPayroll) {
    
    
    
    
    this.includeInPayroll = includeInPayroll;
    return this;
  }

   /**
   * Indicates if the Employee should be included in Payroll. &lt;br /&gt;  Cascade Source: [Employee].[IncludeInPayroll]
   * @return includeInPayroll
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if the Employee should be included in Payroll. <br />  Cascade Source: [Employee].[IncludeInPayroll]")

  public Boolean getIncludeInPayroll() {
    return includeInPayroll;
  }


  public void setIncludeInPayroll(Boolean includeInPayroll) {
    
    
    
    this.includeInPayroll = includeInPayroll;
  }


  public EmployeeModel employmentStartDate(OffsetDateTime employmentStartDate) {
    
    
    
    
    this.employmentStartDate = employmentStartDate;
    return this;
  }

   /**
   * The date the Employee started with their current Employer. &lt;br /&gt;  Cascade Source: [Employee].[EmployeeStartDate]
   * @return employmentStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the Employee started with their current Employer. <br />  Cascade Source: [Employee].[EmployeeStartDate]")

  public OffsetDateTime getEmploymentStartDate() {
    return employmentStartDate;
  }


  public void setEmploymentStartDate(OffsetDateTime employmentStartDate) {
    
    
    
    this.employmentStartDate = employmentStartDate;
  }


  public EmployeeModel employmentLeftDate(OffsetDateTime employmentLeftDate) {
    
    
    
    
    this.employmentLeftDate = employmentLeftDate;
    return this;
  }

   /**
   * The date the Employee left their current Employer. &lt;br /&gt;  Cascade Source: [Employee].[EmployementLeftDate]
   * @return employmentLeftDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the Employee left their current Employer. <br />  Cascade Source: [Employee].[EmployementLeftDate]")

  public OffsetDateTime getEmploymentLeftDate() {
    return employmentLeftDate;
  }


  public void setEmploymentLeftDate(OffsetDateTime employmentLeftDate) {
    
    
    
    this.employmentLeftDate = employmentLeftDate;
  }


  public EmployeeModel continuousServiceDate(OffsetDateTime continuousServiceDate) {
    
    
    
    
    this.continuousServiceDate = continuousServiceDate;
    return this;
  }

   /**
   * The date the Employee&#39;s continuous service should be applied from. &lt;br /&gt;  Cascade Source: [Employee].[ContServiceDate]
   * @return continuousServiceDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the Employee's continuous service should be applied from. <br />  Cascade Source: [Employee].[ContServiceDate]")

  public OffsetDateTime getContinuousServiceDate() {
    return continuousServiceDate;
  }


  public void setContinuousServiceDate(OffsetDateTime continuousServiceDate) {
    
    
    
    this.continuousServiceDate = continuousServiceDate;
  }


  public EmployeeModel dateOfBirth(OffsetDateTime dateOfBirth) {
    
    
    
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * The Date of Birth of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[DateOfBirth]
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Date of Birth of the Employee. <br />  Cascade Source: [Employee].[DateOfBirth]")

  public OffsetDateTime getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(OffsetDateTime dateOfBirth) {
    
    
    
    this.dateOfBirth = dateOfBirth;
  }


  public EmployeeModel lastWorkingDate(OffsetDateTime lastWorkingDate) {
    
    
    
    
    this.lastWorkingDate = lastWorkingDate;
    return this;
  }

   /**
   * The date of the last working date of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[LeaverLastWorkDate]
   * @return lastWorkingDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date of the last working date of the Employee. <br />  Cascade Source: [Employee].[LeaverLastWorkDate]")

  public OffsetDateTime getLastWorkingDate() {
    return lastWorkingDate;
  }


  public void setLastWorkingDate(OffsetDateTime lastWorkingDate) {
    
    
    
    this.lastWorkingDate = lastWorkingDate;
  }


  public EmployeeModel gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * The Gender of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[Sex] translated through the GENDER system list.
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Gender of the Employee. <br />  Cascade Source: [Employee].[Sex] translated through the GENDER system list.")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public EmployeeModel ethnicity(String ethnicity) {
    
    
    
    
    this.ethnicity = ethnicity;
    return this;
  }

   /**
   * The Ethnicity of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[EthnicOrigin] translated through the ETHNICTORIGIN system list.
   * @return ethnicity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Ethnicity of the Employee. <br />  Cascade Source: [Employee].[EthnicOrigin] translated through the ETHNICTORIGIN system list.")

  public String getEthnicity() {
    return ethnicity;
  }


  public void setEthnicity(String ethnicity) {
    
    
    
    this.ethnicity = ethnicity;
  }


  public EmployeeModel nationality(String nationality) {
    
    
    
    
    this.nationality = nationality;
    return this;
  }

   /**
   * The Nationality of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[Nationality] translated through the NATIONALITY system list.
   * @return nationality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Nationality of the Employee. <br />  Cascade Source: [Employee].[Nationality] translated through the NATIONALITY system list.")

  public String getNationality() {
    return nationality;
  }


  public void setNationality(String nationality) {
    
    
    
    this.nationality = nationality;
  }


  public EmployeeModel religion(String religion) {
    
    
    
    
    this.religion = religion;
    return this;
  }

   /**
   * The Religion of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[Religion] transalated through the RELIGION system list.
   * @return religion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Religion of the Employee. <br />  Cascade Source: [Employee].[Religion] transalated through the RELIGION system list.")

  public String getReligion() {
    return religion;
  }


  public void setReligion(String religion) {
    
    
    
    this.religion = religion;
  }


  public EmployeeModel leaverReason(String leaverReason) {
    
    
    
    
    this.leaverReason = leaverReason;
    return this;
  }

   /**
   * The reason for the Employee to Leave. &lt;br /&gt;  Cascade Source: [Employee].[LeaverReason]
   * @return leaverReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reason for the Employee to Leave. <br />  Cascade Source: [Employee].[LeaverReason]")

  public String getLeaverReason() {
    return leaverReason;
  }


  public void setLeaverReason(String leaverReason) {
    
    
    
    this.leaverReason = leaverReason;
  }


  public EmployeeModel maritalStatus(String maritalStatus) {
    
    
    
    
    this.maritalStatus = maritalStatus;
    return this;
  }

   /**
   * The marrital status of the Employee. &lt;br /&gt;  Cascade Source: [Employee.[MaritalStatus] translated through the MARITALSTATUS system list.
   * @return maritalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The marrital status of the Employee. <br />  Cascade Source: [Employee.[MaritalStatus] translated through the MARITALSTATUS system list.")

  public String getMaritalStatus() {
    return maritalStatus;
  }


  public void setMaritalStatus(String maritalStatus) {
    
    
    
    this.maritalStatus = maritalStatus;
  }


  public EmployeeModel phones(List<Phone> phones) {
    
    
    
    
    this.phones = phones;
    return this;
  }

  public EmployeeModel addPhonesItem(Phone phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

   /**
   * The &lt;see cref&#x3D;\&quot;T:Iris.Api.Hr.Employee.Domain.Entities.V1.Phone\&quot;&gt;Phone Numbers&lt;/see&gt; belonging to the Employee.
   * @return phones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The <see cref=\"T:Iris.Api.Hr.Employee.Domain.Entities.V1.Phone\">Phone Numbers</see> belonging to the Employee.")

  public List<Phone> getPhones() {
    return phones;
  }


  public void setPhones(List<Phone> phones) {
    
    
    
    this.phones = phones;
  }


  public EmployeeModel emails(List<Email> emails) {
    
    
    
    
    this.emails = emails;
    return this;
  }

  public EmployeeModel addEmailsItem(Email emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * The &lt;see cref&#x3D;\&quot;T:Iris.Api.Hr.Employee.Domain.Entities.V1.Email\&quot;&gt;Email Addresses&lt;/see&gt; belonging to the Employee.
   * @return emails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The <see cref=\"T:Iris.Api.Hr.Employee.Domain.Entities.V1.Email\">Email Addresses</see> belonging to the Employee.")

  public List<Email> getEmails() {
    return emails;
  }


  public void setEmails(List<Email> emails) {
    
    
    
    this.emails = emails;
  }


  public EmployeeModel addresses(List<Address> addresses) {
    
    
    
    
    this.addresses = addresses;
    return this;
  }

  public EmployeeModel addAddressesItem(Address addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * The &lt;see cref&#x3D;\&quot;T:Iris.Api.Hr.Employee.Domain.Entities.V1.Address\&quot;&gt;Addresses&lt;/see&gt; belonging to the Employee.
   * @return addresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The <see cref=\"T:Iris.Api.Hr.Employee.Domain.Entities.V1.Address\">Addresses</see> belonging to the Employee.")

  public List<Address> getAddresses() {
    return addresses;
  }


  public void setAddresses(List<Address> addresses) {
    
    
    
    this.addresses = addresses;
  }


  public EmployeeModel genderIdentity(String genderIdentity) {
    
    
    
    
    this.genderIdentity = genderIdentity;
    return this;
  }

   /**
   * The Gender Identity of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[GenderIdentity] translated through the GenderIdentity system list.
   * @return genderIdentity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Gender Identity of the Employee. <br />  Cascade Source: [Employee].[GenderIdentity] translated through the GenderIdentity system list.")

  public String getGenderIdentity() {
    return genderIdentity;
  }


  public void setGenderIdentity(String genderIdentity) {
    
    
    
    this.genderIdentity = genderIdentity;
  }


  public EmployeeModel windowsUsername(String windowsUsername) {
    
    
    
    
    this.windowsUsername = windowsUsername;
    return this;
  }

   /**
   * The Windows Username of the Employee. &lt;br /&gt;  Cascade Source: [Employee].[WindowsUsername]
   * @return windowsUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Windows Username of the Employee. <br />  Cascade Source: [Employee].[WindowsUsername]")

  public String getWindowsUsername() {
    return windowsUsername;
  }


  public void setWindowsUsername(String windowsUsername) {
    
    
    
    this.windowsUsername = windowsUsername;
  }


  public EmployeeModel id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * This ID is generated by the Iris HR platform and does not relate to the Cascade Employee ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This ID is generated by the Iris HR platform and does not relate to the Cascade Employee ID.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public EmployeeModel sourceSystemId(String sourceSystemId) {
    
    
    
    
    this.sourceSystemId = sourceSystemId;
    return this;
  }

   /**
   * Source HR System Id. &lt;br /&gt;  Cascade Source: [Employee].[EmployeeId] &lt;br /&gt;  Read Only
   * @return sourceSystemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source HR System Id. <br />  Cascade Source: [Employee].[EmployeeId] <br />  Read Only")

  public String getSourceSystemId() {
    return sourceSystemId;
  }


  public void setSourceSystemId(String sourceSystemId) {
    
    
    
    this.sourceSystemId = sourceSystemId;
  }


  public EmployeeModel createdOn(OffsetDateTime createdOn) {
    
    
    
    
    this.createdOn = createdOn;
    return this;
  }

   /**
   * The date when the Employee was created in the Iris HR platform.
   * @return createdOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the Employee was created in the Iris HR platform.")

  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }


  public void setCreatedOn(OffsetDateTime createdOn) {
    
    
    
    this.createdOn = createdOn;
  }


  public EmployeeModel sourceSystemCreatedOn(OffsetDateTime sourceSystemCreatedOn) {
    
    
    
    
    this.sourceSystemCreatedOn = sourceSystemCreatedOn;
    return this;
  }

   /**
   * The date when the Employee was created in the Source HR System. &lt;br /&gt;  Cascade Source: [Employee].[SYS_EffectiveDate] &lt;br /&gt;  Read Only
   * @return sourceSystemCreatedOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the Employee was created in the Source HR System. <br />  Cascade Source: [Employee].[SYS_EffectiveDate] <br />  Read Only")

  public OffsetDateTime getSourceSystemCreatedOn() {
    return sourceSystemCreatedOn;
  }


  public void setSourceSystemCreatedOn(OffsetDateTime sourceSystemCreatedOn) {
    
    
    
    this.sourceSystemCreatedOn = sourceSystemCreatedOn;
  }


  public EmployeeModel createdBy(String createdBy) {
    
    
    
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Not used as the Iris HR platform has no concept of users.
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used as the Iris HR platform has no concept of users.")

  public String getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(String createdBy) {
    
    
    
    this.createdBy = createdBy;
  }


  public EmployeeModel lastModifiedOn(OffsetDateTime lastModifiedOn) {
    
    
    
    
    this.lastModifiedOn = lastModifiedOn;
    return this;
  }

   /**
   * The date when the Employee was created or last updated.
   * @return lastModifiedOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the Employee was created or last updated.")

  public OffsetDateTime getLastModifiedOn() {
    return lastModifiedOn;
  }


  public void setLastModifiedOn(OffsetDateTime lastModifiedOn) {
    
    
    
    this.lastModifiedOn = lastModifiedOn;
  }


  public EmployeeModel sourceSystemLastModifiedOn(OffsetDateTime sourceSystemLastModifiedOn) {
    
    
    
    
    this.sourceSystemLastModifiedOn = sourceSystemLastModifiedOn;
    return this;
  }

   /**
   * The latest date when the Employee or Home Address was created or last updated in the Source HR System. &lt;br /&gt;  Cascade Source: Latest of [Employee].[SYS_ModifiedDate] and [EmployeeHomeAddress].[SYS_ModifiedDate] &lt;br /&gt;  Read Only
   * @return sourceSystemLastModifiedOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The latest date when the Employee or Home Address was created or last updated in the Source HR System. <br />  Cascade Source: Latest of [Employee].[SYS_ModifiedDate] and [EmployeeHomeAddress].[SYS_ModifiedDate] <br />  Read Only")

  public OffsetDateTime getSourceSystemLastModifiedOn() {
    return sourceSystemLastModifiedOn;
  }


  public void setSourceSystemLastModifiedOn(OffsetDateTime sourceSystemLastModifiedOn) {
    
    
    
    this.sourceSystemLastModifiedOn = sourceSystemLastModifiedOn;
  }


  public EmployeeModel lastModifiedBy(String lastModifiedBy) {
    
    
    
    
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

   /**
   * Not used as Iris HR platform has no concept of users.
   * @return lastModifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used as Iris HR platform has no concept of users.")

  public String getLastModifiedBy() {
    return lastModifiedBy;
  }


  public void setLastModifiedBy(String lastModifiedBy) {
    
    
    
    this.lastModifiedBy = lastModifiedBy;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeeModel instance itself
   */
  public EmployeeModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeModel employeeModel = (EmployeeModel) o;
    return Objects.equals(this.displayId, employeeModel.displayId) &&
        Objects.equals(this.titleHonorific, employeeModel.titleHonorific) &&
        Objects.equals(this.firstName, employeeModel.firstName) &&
        Objects.equals(this.knownAs, employeeModel.knownAs) &&
        Objects.equals(this.otherName, employeeModel.otherName) &&
        Objects.equals(this.lastName, employeeModel.lastName) &&
        Objects.equals(this.costCentre, employeeModel.costCentre) &&
        Objects.equals(this.workingStatus, employeeModel.workingStatus) &&
        Objects.equals(this.isManager, employeeModel.isManager) &&
        Objects.equals(this.nationalInsuranceNumber, employeeModel.nationalInsuranceNumber) &&
        Objects.equals(this.payrollId, employeeModel.payrollId) &&
        Objects.equals(this.taxCode, employeeModel.taxCode) &&
        Objects.equals(this.includeInPayroll, employeeModel.includeInPayroll) &&
        Objects.equals(this.employmentStartDate, employeeModel.employmentStartDate) &&
        Objects.equals(this.employmentLeftDate, employeeModel.employmentLeftDate) &&
        Objects.equals(this.continuousServiceDate, employeeModel.continuousServiceDate) &&
        Objects.equals(this.dateOfBirth, employeeModel.dateOfBirth) &&
        Objects.equals(this.lastWorkingDate, employeeModel.lastWorkingDate) &&
        Objects.equals(this.gender, employeeModel.gender) &&
        Objects.equals(this.ethnicity, employeeModel.ethnicity) &&
        Objects.equals(this.nationality, employeeModel.nationality) &&
        Objects.equals(this.religion, employeeModel.religion) &&
        Objects.equals(this.leaverReason, employeeModel.leaverReason) &&
        Objects.equals(this.maritalStatus, employeeModel.maritalStatus) &&
        Objects.equals(this.phones, employeeModel.phones) &&
        Objects.equals(this.emails, employeeModel.emails) &&
        Objects.equals(this.addresses, employeeModel.addresses) &&
        Objects.equals(this.genderIdentity, employeeModel.genderIdentity) &&
        Objects.equals(this.windowsUsername, employeeModel.windowsUsername) &&
        Objects.equals(this.id, employeeModel.id) &&
        Objects.equals(this.sourceSystemId, employeeModel.sourceSystemId) &&
        Objects.equals(this.createdOn, employeeModel.createdOn) &&
        Objects.equals(this.sourceSystemCreatedOn, employeeModel.sourceSystemCreatedOn) &&
        Objects.equals(this.createdBy, employeeModel.createdBy) &&
        Objects.equals(this.lastModifiedOn, employeeModel.lastModifiedOn) &&
        Objects.equals(this.sourceSystemLastModifiedOn, employeeModel.sourceSystemLastModifiedOn) &&
        Objects.equals(this.lastModifiedBy, employeeModel.lastModifiedBy)&&
        Objects.equals(this.additionalProperties, employeeModel.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayId, titleHonorific, firstName, knownAs, otherName, lastName, costCentre, workingStatus, isManager, nationalInsuranceNumber, payrollId, taxCode, includeInPayroll, employmentStartDate, employmentLeftDate, continuousServiceDate, dateOfBirth, lastWorkingDate, gender, ethnicity, nationality, religion, leaverReason, maritalStatus, phones, emails, addresses, genderIdentity, windowsUsername, id, sourceSystemId, createdOn, sourceSystemCreatedOn, createdBy, lastModifiedOn, sourceSystemLastModifiedOn, lastModifiedBy, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeModel {\n");
    sb.append("    displayId: ").append(toIndentedString(displayId)).append("\n");
    sb.append("    titleHonorific: ").append(toIndentedString(titleHonorific)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    knownAs: ").append(toIndentedString(knownAs)).append("\n");
    sb.append("    otherName: ").append(toIndentedString(otherName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    costCentre: ").append(toIndentedString(costCentre)).append("\n");
    sb.append("    workingStatus: ").append(toIndentedString(workingStatus)).append("\n");
    sb.append("    isManager: ").append(toIndentedString(isManager)).append("\n");
    sb.append("    nationalInsuranceNumber: ").append(toIndentedString(nationalInsuranceNumber)).append("\n");
    sb.append("    payrollId: ").append(toIndentedString(payrollId)).append("\n");
    sb.append("    taxCode: ").append(toIndentedString(taxCode)).append("\n");
    sb.append("    includeInPayroll: ").append(toIndentedString(includeInPayroll)).append("\n");
    sb.append("    employmentStartDate: ").append(toIndentedString(employmentStartDate)).append("\n");
    sb.append("    employmentLeftDate: ").append(toIndentedString(employmentLeftDate)).append("\n");
    sb.append("    continuousServiceDate: ").append(toIndentedString(continuousServiceDate)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    lastWorkingDate: ").append(toIndentedString(lastWorkingDate)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    ethnicity: ").append(toIndentedString(ethnicity)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    religion: ").append(toIndentedString(religion)).append("\n");
    sb.append("    leaverReason: ").append(toIndentedString(leaverReason)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    genderIdentity: ").append(toIndentedString(genderIdentity)).append("\n");
    sb.append("    windowsUsername: ").append(toIndentedString(windowsUsername)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sourceSystemId: ").append(toIndentedString(sourceSystemId)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    sourceSystemCreatedOn: ").append(toIndentedString(sourceSystemCreatedOn)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastModifiedOn: ").append(toIndentedString(lastModifiedOn)).append("\n");
    sb.append("    sourceSystemLastModifiedOn: ").append(toIndentedString(sourceSystemLastModifiedOn)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DisplayId");
    openapiFields.add("TitleHonorific");
    openapiFields.add("FirstName");
    openapiFields.add("KnownAs");
    openapiFields.add("OtherName");
    openapiFields.add("LastName");
    openapiFields.add("CostCentre");
    openapiFields.add("WorkingStatus");
    openapiFields.add("IsManager");
    openapiFields.add("NationalInsuranceNumber");
    openapiFields.add("PayrollId");
    openapiFields.add("TaxCode");
    openapiFields.add("IncludeInPayroll");
    openapiFields.add("EmploymentStartDate");
    openapiFields.add("EmploymentLeftDate");
    openapiFields.add("ContinuousServiceDate");
    openapiFields.add("DateOfBirth");
    openapiFields.add("LastWorkingDate");
    openapiFields.add("Gender");
    openapiFields.add("Ethnicity");
    openapiFields.add("Nationality");
    openapiFields.add("Religion");
    openapiFields.add("LeaverReason");
    openapiFields.add("MaritalStatus");
    openapiFields.add("Phones");
    openapiFields.add("Emails");
    openapiFields.add("Addresses");
    openapiFields.add("GenderIdentity");
    openapiFields.add("WindowsUsername");
    openapiFields.add("Id");
    openapiFields.add("SourceSystemId");
    openapiFields.add("CreatedOn");
    openapiFields.add("SourceSystemCreatedOn");
    openapiFields.add("CreatedBy");
    openapiFields.add("LastModifiedOn");
    openapiFields.add("SourceSystemLastModifiedOn");
    openapiFields.add("LastModifiedBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeeModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeeModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeeModel is not found in the empty JSON string", EmployeeModel.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("DisplayId").isJsonNull() && (jsonObj.get("DisplayId") != null && !jsonObj.get("DisplayId").isJsonNull()) && !jsonObj.get("DisplayId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DisplayId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DisplayId").toString()));
      }
      if (!jsonObj.get("TitleHonorific").isJsonNull() && (jsonObj.get("TitleHonorific") != null && !jsonObj.get("TitleHonorific").isJsonNull()) && !jsonObj.get("TitleHonorific").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TitleHonorific` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TitleHonorific").toString()));
      }
      if (!jsonObj.get("FirstName").isJsonNull() && (jsonObj.get("FirstName") != null && !jsonObj.get("FirstName").isJsonNull()) && !jsonObj.get("FirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FirstName").toString()));
      }
      if (!jsonObj.get("KnownAs").isJsonNull() && (jsonObj.get("KnownAs") != null && !jsonObj.get("KnownAs").isJsonNull()) && !jsonObj.get("KnownAs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KnownAs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KnownAs").toString()));
      }
      if (!jsonObj.get("OtherName").isJsonNull() && (jsonObj.get("OtherName") != null && !jsonObj.get("OtherName").isJsonNull()) && !jsonObj.get("OtherName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OtherName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OtherName").toString()));
      }
      if (!jsonObj.get("LastName").isJsonNull() && (jsonObj.get("LastName") != null && !jsonObj.get("LastName").isJsonNull()) && !jsonObj.get("LastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastName").toString()));
      }
      if (!jsonObj.get("CostCentre").isJsonNull() && (jsonObj.get("CostCentre") != null && !jsonObj.get("CostCentre").isJsonNull()) && !jsonObj.get("CostCentre").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CostCentre` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CostCentre").toString()));
      }
      if (!jsonObj.get("WorkingStatus").isJsonNull() && (jsonObj.get("WorkingStatus") != null && !jsonObj.get("WorkingStatus").isJsonNull()) && !jsonObj.get("WorkingStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WorkingStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WorkingStatus").toString()));
      }
      if (!jsonObj.get("NationalInsuranceNumber").isJsonNull() && (jsonObj.get("NationalInsuranceNumber") != null && !jsonObj.get("NationalInsuranceNumber").isJsonNull()) && !jsonObj.get("NationalInsuranceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NationalInsuranceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NationalInsuranceNumber").toString()));
      }
      if (!jsonObj.get("PayrollId").isJsonNull() && (jsonObj.get("PayrollId") != null && !jsonObj.get("PayrollId").isJsonNull()) && !jsonObj.get("PayrollId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PayrollId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PayrollId").toString()));
      }
      if (!jsonObj.get("TaxCode").isJsonNull() && (jsonObj.get("TaxCode") != null && !jsonObj.get("TaxCode").isJsonNull()) && !jsonObj.get("TaxCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TaxCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TaxCode").toString()));
      }
      if (!jsonObj.get("Gender").isJsonNull() && (jsonObj.get("Gender") != null && !jsonObj.get("Gender").isJsonNull()) && !jsonObj.get("Gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Gender").toString()));
      }
      if (!jsonObj.get("Ethnicity").isJsonNull() && (jsonObj.get("Ethnicity") != null && !jsonObj.get("Ethnicity").isJsonNull()) && !jsonObj.get("Ethnicity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Ethnicity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Ethnicity").toString()));
      }
      if (!jsonObj.get("Nationality").isJsonNull() && (jsonObj.get("Nationality") != null && !jsonObj.get("Nationality").isJsonNull()) && !jsonObj.get("Nationality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Nationality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Nationality").toString()));
      }
      if (!jsonObj.get("Religion").isJsonNull() && (jsonObj.get("Religion") != null && !jsonObj.get("Religion").isJsonNull()) && !jsonObj.get("Religion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Religion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Religion").toString()));
      }
      if (!jsonObj.get("LeaverReason").isJsonNull() && (jsonObj.get("LeaverReason") != null && !jsonObj.get("LeaverReason").isJsonNull()) && !jsonObj.get("LeaverReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LeaverReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LeaverReason").toString()));
      }
      if (!jsonObj.get("MaritalStatus").isJsonNull() && (jsonObj.get("MaritalStatus") != null && !jsonObj.get("MaritalStatus").isJsonNull()) && !jsonObj.get("MaritalStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MaritalStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MaritalStatus").toString()));
      }
      if (jsonObj.get("Phones") != null && !jsonObj.get("Phones").isJsonNull()) {
        JsonArray jsonArrayphones = jsonObj.getAsJsonArray("Phones");
        if (jsonArrayphones != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Phones").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Phones` to be an array in the JSON string but got `%s`", jsonObj.get("Phones").toString()));
          }

          // validate the optional field `Phones` (array)
          for (int i = 0; i < jsonArrayphones.size(); i++) {
            Phone.validateJsonObject(jsonArrayphones.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("Emails") != null && !jsonObj.get("Emails").isJsonNull()) {
        JsonArray jsonArrayemails = jsonObj.getAsJsonArray("Emails");
        if (jsonArrayemails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Emails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Emails` to be an array in the JSON string but got `%s`", jsonObj.get("Emails").toString()));
          }

          // validate the optional field `Emails` (array)
          for (int i = 0; i < jsonArrayemails.size(); i++) {
            Email.validateJsonObject(jsonArrayemails.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("Addresses") != null && !jsonObj.get("Addresses").isJsonNull()) {
        JsonArray jsonArrayaddresses = jsonObj.getAsJsonArray("Addresses");
        if (jsonArrayaddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Addresses` to be an array in the JSON string but got `%s`", jsonObj.get("Addresses").toString()));
          }

          // validate the optional field `Addresses` (array)
          for (int i = 0; i < jsonArrayaddresses.size(); i++) {
            Address.validateJsonObject(jsonArrayaddresses.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("GenderIdentity").isJsonNull() && (jsonObj.get("GenderIdentity") != null && !jsonObj.get("GenderIdentity").isJsonNull()) && !jsonObj.get("GenderIdentity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GenderIdentity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GenderIdentity").toString()));
      }
      if (!jsonObj.get("WindowsUsername").isJsonNull() && (jsonObj.get("WindowsUsername") != null && !jsonObj.get("WindowsUsername").isJsonNull()) && !jsonObj.get("WindowsUsername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WindowsUsername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WindowsUsername").toString()));
      }
      if (!jsonObj.get("Id").isJsonNull() && (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      if (!jsonObj.get("SourceSystemId").isJsonNull() && (jsonObj.get("SourceSystemId") != null && !jsonObj.get("SourceSystemId").isJsonNull()) && !jsonObj.get("SourceSystemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SourceSystemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SourceSystemId").toString()));
      }
      if (!jsonObj.get("CreatedBy").isJsonNull() && (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) && !jsonObj.get("CreatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CreatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CreatedBy").toString()));
      }
      if (!jsonObj.get("LastModifiedBy").isJsonNull() && (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) && !jsonObj.get("LastModifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastModifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastModifiedBy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeeModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeeModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeeModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeeModel.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeeModel>() {
           @Override
           public void write(JsonWriter out, EmployeeModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeeModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeeModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeeModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeeModel
  * @throws IOException if the JSON string is invalid with respect to EmployeeModel
  */
  public static EmployeeModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeeModel.class);
  }

 /**
  * Convert an instance of EmployeeModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

